// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MarblesDao is the data access object for table marbles.
type MarblesDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns MarblesColumns // columns contains all the column names of Table for convenient usage.
}

// MarblesColumns defines and stores column names for table marbles.
type MarblesColumns struct {
	Id           string //
	TenantId     string //
	Sn           string //
	Name         string //
	Type         string //
	PictureUrls  string //
	Price        string //
	Width        string //
	Length       string //
	Height       string //
	Mass         string //
	Area         string //
	State        string //
	Description  string //
	Remark       string //
	IsDeleted    string //
	PictureUrls1 string //
	PictureUrls2 string //
	PictureUrls3 string //
	PictureUrls4 string //
	PictureUrls5 string //
}

// marblesColumns holds the columns for table marbles.
var marblesColumns = MarblesColumns{
	Id:           "id",
	TenantId:     "tenant_id",
	Sn:           "sn",
	Name:         "name",
	Type:         "type",
	PictureUrls:  "picture_urls",
	Price:        "price",
	Width:        "width",
	Length:       "length",
	Height:       "height",
	Mass:         "mass",
	Area:         "area",
	State:        "state",
	Description:  "description",
	Remark:       "remark",
	IsDeleted:    "is_deleted",
	PictureUrls1: "picture_urls1",
	PictureUrls2: "picture_urls2",
	PictureUrls3: "picture_urls3",
	PictureUrls4: "picture_urls4",
	PictureUrls5: "picture_urls5",
}

// NewMarblesDao creates and returns a new DAO object for table data access.
func NewMarblesDao() *MarblesDao {
	return &MarblesDao{
		group:   "default",
		table:   "marbles",
		columns: marblesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MarblesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *MarblesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *MarblesDao) Columns() MarblesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *MarblesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MarblesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx).Hook(TenantHook)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MarblesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
