// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// AlertRuleDao is the data access object for table alert_rule.
type AlertRuleDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns AlertRuleColumns // columns contains all the column names of Table for convenient usage.
}

// AlertRuleColumns defines and stores column names for table alert_rule.
type AlertRuleColumns struct {
	Id        string //
	TenantId  string //
	Rulename  string //
	Rule      string //
	RuleType  string //
	IsDeleted string //
	CreateAt  string //
	UpdateAt  string //
}

// alertRuleColumns holds the columns for table alert_rule.
var alertRuleColumns = AlertRuleColumns{
	Id:        "id",
	TenantId:  "tenant_id",
	Rulename:  "rulename",
	Rule:      "rule",
	RuleType:  "rule_type",
	IsDeleted: "is_deleted",
	CreateAt:  "create_at",
	UpdateAt:  "update_at",
}

// NewAlertRuleDao creates and returns a new DAO object for table data access.
func NewAlertRuleDao() *AlertRuleDao {
	return &AlertRuleDao{
		group:   "default",
		table:   "alert_rule",
		columns: alertRuleColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *AlertRuleDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *AlertRuleDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *AlertRuleDao) Columns() AlertRuleColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *AlertRuleDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *AlertRuleDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx).Hook(TenantHook)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *AlertRuleDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
